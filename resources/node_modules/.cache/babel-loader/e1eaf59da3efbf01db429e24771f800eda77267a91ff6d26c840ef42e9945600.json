{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'CategoryScreen',\n  data() {\n    return {\n      dataList: [],\n      currentPage: 1,\n      perPage: 10,\n      showModal: false,\n      showModalCreate: false,\n      editForm: {\n        id: '',\n        name: '',\n        status: false\n      },\n      createForm: {\n        name: '',\n        status: true\n      }\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.dataList.length / this.perPage);\n    },\n    paginatedData() {\n      if (Array.isArray(this.dataList) && this.dataList.length > 0) {\n        const startIndex = (this.currentPage - 1) * this.perPage;\n        const endIndex = startIndex + this.perPage;\n        return this.dataList.slice(startIndex, endIndex);\n      } else {\n        return [];\n      }\n    }\n  },\n  mounted() {\n    this.fetchData();\n  },\n  methods: {\n    fetchData() {\n      axios.get('http://localhost:8000/category').then(response => {\n        this.dataList = response.data['data'];\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    deleteItem(item) {\n      const formData = new FormData();\n      formData.append('id', item.uuid);\n      console.log(item.uuid);\n      axios.post('http://localhost:8000/category/delete', formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.fetchData();\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    editItem(item) {\n      this.editForm.id = item.uuid;\n      this.editForm.name = item.name;\n      this.editForm.status = item.status.toString();\n      this.showModal = true;\n    },\n    openCreateModal() {\n      this.showModalCreate = true;\n    },\n    updateItem() {\n      const formData = new FormData();\n      formData.append('id', this.editForm.id);\n      formData.append('name', this.editForm.name);\n      formData.append('status', this.editForm.status);\n      axios.post('http://localhost:8000/category/update', formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.closeModal();\n        this.fetchData();\n      }).catch(error => {\n        console.error(error);\n        this.closeModal();\n      });\n    },\n    createItem() {\n      const formData = new FormData();\n      formData.append('name', this.createForm.name);\n      formData.append('status', this.createForm.status);\n      axios.post('http://localhost:8000/category/create', formData, {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.closeModalCreate();\n        this.fetchData();\n      }).catch(error => {\n        console.error(error);\n        this.closeModalCreate();\n      });\n    },\n    closeModalCreate() {\n      this.showModalCreate = false;\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","dataList","currentPage","perPage","showModal","showModalCreate","editForm","id","status","createForm","computed","totalPages","Math","ceil","length","paginatedData","Array","isArray","startIndex","endIndex","slice","mounted","fetchData","methods","get","then","response","catch","error","console","previousPage","nextPage","deleteItem","item","formData","FormData","append","uuid","log","post","headers","closeModal","editItem","toString","openCreateModal","updateItem","createItem","closeModalCreate"],"sources":["/home/ldsh-dev/projects/softexpert/resources/src/components/CategoryScreen.vue"],"sourcesContent":["<template>\r\n  <div id=\"category\">\r\n    <h1 class=\"category-title\">Category</h1>\r\n    <div class=\"table-container\">\r\n      <table class=\"table table-transparent\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Fee</th>\r\n            <th>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(item, index) in paginatedData\" :key=\"item.uuid\">\r\n            <td>{{ (currentPage - 1) * perPage + index + 1 }}</td>\r\n            <td>{{ item.uuid }}</td>\r\n            <td>{{ item.name }}</td>\r\n            <td>0.30</td>\r\n            <td>\r\n              <span v-if=\"item.status\" class=\"status-active\">Active</span>\r\n              <span v-else class=\"status-inactive\">Inactive</span>\r\n            </td>\r\n            <td>\r\n              <button class=\"btn btn-primary btn-sm\" @click=\"editItem(item)\">Edit</button>\r\n              <button class=\"btn btn-danger btn-sm\" @click=\"deleteItem(item)\">Delete</button>\r\n            </td>\r\n          </tr>\r\n          <td>\r\n            <button class=\"btn btn-success btn-sm\" @click=\"openCreateModal\">New Category</button>\r\n          </td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div class=\"pagination-container\">\r\n      <button class=\"btn btn-primary btn-sm\" :hidden=\"currentPage === 1\" @click=\"previousPage\">Previous</button>\r\n      <span>{{ currentPage }} / {{ totalPages }}</span>\r\n      <button class=\"btn btn-primary btn-sm\" :hidden=\"currentPage === totalPages\" @click=\"nextPage\">Next</button>\r\n    </div>\r\n\r\n    <div class=\"modal\" v-if=\"showModal\">\r\n      <div class=\"modal-content\">\r\n        <h2>Edit Category</h2>\r\n        <form @submit.prevent=\"updateItem\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Name:</label>\r\n            <input type=\"text\" id=\"name\" v-model=\"editForm.name\" class=\"form-control\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"status\">Status:</label>\r\n            <select id=\"status\" v-model=\"editForm.status\" class=\"form-control\" required>\r\n              <option value=\"true\">Active</option>\r\n              <option value=\"false\">Inactive</option>\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-primary\">Save</button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeModal\">Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"modal\" v-if=\"showModalCreate\">\r\n      <div class=\"modal-content\">\r\n        <h2>New Category</h2>\r\n        <form @submit.prevent=\"createItem\">\r\n          <div class=\"form-group\">\r\n            <label for=\"name\">Name:</label>\r\n            <input type=\"text\" id=\"name\" v-model=\"createForm.name\" class=\"form-control\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label for=\"status\">Status:</label>\r\n            <select id=\"status\" v-model=\"createForm.status\" class=\"form-control\" required>\r\n              <option value=\"true\">Active</option>\r\n              <option value=\"false\">Inactive</option>\r\n            </select>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn btn-success\">Save</button>\r\n          <button type=\"button\" class=\"btn btn-danger\" @click=\"closeModalCreate\">Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'CategoryScreen',\r\n  data() {\r\n    return {\r\n      dataList: [],\r\n      currentPage: 1,\r\n      perPage: 10,\r\n      showModal: false,\r\n      showModalCreate: false,\r\n      editForm: {\r\n        id: '',\r\n        name: '',\r\n        status: false\r\n      },\r\n      createForm: {\r\n        name: '',\r\n        status: true\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    totalPages() {\r\n      return Math.ceil(this.dataList.length / this.perPage);\r\n    },\r\n    paginatedData() {\r\n      if (Array.isArray(this.dataList) && this.dataList.length > 0) {\r\n        const startIndex = (this.currentPage - 1) * this.perPage;\r\n        const endIndex = startIndex + this.perPage;\r\n        return this.dataList.slice(startIndex, endIndex);\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchData();\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      axios.get('http://localhost:8000/category')\r\n        .then(response => {\r\n          this.dataList = response.data['data'];\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    previousPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    deleteItem(item) {\r\n      const formData = new FormData();\r\n      formData.append('id', item.uuid);\r\n      console.log(item.uuid);\r\n      axios.post('http://localhost:8000/category/delete', formData, {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.fetchData();\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n    },\r\n    editItem(item) {\r\n      this.editForm.id = item.uuid;\r\n      this.editForm.name = item.name;\r\n      this.editForm.status = item.status.toString();\r\n      this.showModal = true;\r\n    },\r\n    openCreateModal() {\r\n      this.showModalCreate = true;\r\n    },\r\n    updateItem() {\r\n      const formData = new FormData();\r\n      formData.append('id', this.editForm.id);\r\n      formData.append('name', this.editForm.name);\r\n      formData.append('status', this.editForm.status);\r\n        \r\n      axios.post('http://localhost:8000/category/update', formData, {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.closeModal();\r\n        this.fetchData();\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        this.closeModal();\r\n      });\r\n    },\r\n    createItem() {\r\n      const formData = new FormData();\r\n      formData.append('name', this.createForm.name);\r\n      formData.append('status', this.createForm.status);\r\n        \r\n      axios.post('http://localhost:8000/category/create', formData, {\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n      })\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.closeModalCreate();\r\n        this.fetchData();\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n        this.closeModalCreate();\r\n      });\r\n    },\r\n    closeModalCreate() {\r\n      this.showModalCreate = false;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n#category {\r\n  margin-top: 20px;\r\n  text-align: center;\r\n}\r\n\r\n.category-title {\r\n  font-size: 28px;\r\n  margin-bottom: 20px;\r\n  color: #333;\r\n}\r\n\r\n.table-container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\nth{\r\n  background: #0091ed;\r\n  color: white;\r\n}\r\n\r\ntr,\r\ntd{\r\n  background: whitesmoke;\r\n}\r\n\r\n.btn {\r\n  margin-right: 10px;\r\n}\r\n\r\nh1{\r\n  color:#0091ed !important;\r\n}\r\n\r\n.status-active {\r\n  color: green;\r\n}\r\n\r\n.status-inactive {\r\n  color: red;\r\n}\r\n\r\n.modal {\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.modal-background {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n}\r\n\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}